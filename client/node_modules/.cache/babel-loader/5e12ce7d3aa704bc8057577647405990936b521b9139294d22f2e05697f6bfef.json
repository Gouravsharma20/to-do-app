{"ast":null,"code":"var _jsxFileName = \"/Users/gaurav/code/Cuvette/to-do-app copy/client/src/Components/Records/NoteRecords/NoteRecords.js\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport { AppDataContext } from '../../../Context/AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteRecords = () => {\n  _s();\n  const {\n    notes\n  } = useContext(AppDataContext);\n\n  // fetchNotes()\n\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const today = new Date();\n    const yesterday = new Date(today);\n    yesterday.setDate(yesterday.getDate() - 1);\n    const isToday = date.toDateString() === today.toDateString();\n    const isYesterday = date.toDateString() === yesterday.toDateString();\n    const time = date.toLocaleTimeString('en-US', {\n      hour: 'numeric',\n      minute: '2-digit',\n      hour12: true\n    });\n    if (isToday) {\n      return `Today ${time}`;\n    } else if (isYesterday) {\n      return `Yesterday ${time}`;\n    } else {\n      return `${date.toLocaleDateString('en-US', {\n        day: 'numeric',\n        month: 'short',\n        year: 'numeric'\n      })} ${time}`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note-records-container\",\n    children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-content\",\n        children: note.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-timestamp\",\n        children: formatDate(note.createdAt)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)]\n    }, note._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(NoteRecords, \"qsClpp2AN21EaDmsGpySboIftyI=\");\n_c = NoteRecords;\nexport default NoteRecords;\nvar _c;\n$RefreshReg$(_c, \"NoteRecords\");","map":{"version":3,"names":["useContext","AppDataContext","jsxDEV","_jsxDEV","NoteRecords","_s","notes","formatDate","dateString","date","Date","today","yesterday","setDate","getDate","isToday","toDateString","isYesterday","time","toLocaleTimeString","hour","minute","hour12","toLocaleDateString","day","month","year","className","children","map","note","content","fileName","_jsxFileName","lineNumber","columnNumber","createdAt","_id","_c","$RefreshReg$"],"sources":["/Users/gaurav/code/Cuvette/to-do-app copy/client/src/Components/Records/NoteRecords/NoteRecords.js"],"sourcesContent":["import { useContext } from \"react\"\nimport { AppDataContext } from '../../../Context/AppContext';\n\nconst NoteRecords = () => {\n    const {notes } = useContext(AppDataContext)\n    \n\n    // fetchNotes()\n\n    \n\n    const formatDate = (dateString) => {\n        const date = new Date(dateString);\n        const today = new Date();\n        const yesterday = new Date(today);\n        yesterday.setDate(yesterday.getDate() - 1);\n\n        const isToday = date.toDateString() === today.toDateString();\n        const isYesterday = date.toDateString() === yesterday.toDateString();\n\n        const time = date.toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: '2-digit',\n            hour12: true\n        });\n\n        if (isToday) {\n            return `Today ${time}`;\n        } else if (isYesterday) {\n            return `Yesterday ${time}`;\n        } else {\n            return `${date.toLocaleDateString('en-US', {\n                day: 'numeric',\n                month: 'short',\n                year: 'numeric'\n            })} ${time}`;\n        }\n    };\n\n    \n    return (\n        <div className=\"note-records-container\">\n            {notes.map((note) => (\n                <div key={note._id} className=\"note-item\">\n                    <div className=\"note-content\">\n                        {note.content}\n                    </div>\n                    <div className=\"note-timestamp\">\n                        {formatDate(note.createdAt)}\n                    </div>\n                </div>\n            ))}\n            \n        </div>\n    );\n}\n\n\n\n\n\n\n\n\nexport default NoteRecords;"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,cAAc,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAACC;EAAM,CAAC,GAAGN,UAAU,CAACC,cAAc,CAAC;;EAG3C;;EAIA,MAAMM,UAAU,GAAIC,UAAU,IAAK;IAC/B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;IACjC,MAAMG,KAAK,GAAG,IAAID,IAAI,CAAC,CAAC;IACxB,MAAME,SAAS,GAAG,IAAIF,IAAI,CAACC,KAAK,CAAC;IACjCC,SAAS,CAACC,OAAO,CAACD,SAAS,CAACE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IAE1C,MAAMC,OAAO,GAAGN,IAAI,CAACO,YAAY,CAAC,CAAC,KAAKL,KAAK,CAACK,YAAY,CAAC,CAAC;IAC5D,MAAMC,WAAW,GAAGR,IAAI,CAACO,YAAY,CAAC,CAAC,KAAKJ,SAAS,CAACI,YAAY,CAAC,CAAC;IAEpE,MAAME,IAAI,GAAGT,IAAI,CAACU,kBAAkB,CAAC,OAAO,EAAE;MAC1CC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE,SAAS;MACjBC,MAAM,EAAE;IACZ,CAAC,CAAC;IAEF,IAAIP,OAAO,EAAE;MACT,OAAO,SAASG,IAAI,EAAE;IAC1B,CAAC,MAAM,IAAID,WAAW,EAAE;MACpB,OAAO,aAAaC,IAAI,EAAE;IAC9B,CAAC,MAAM;MACH,OAAO,GAAGT,IAAI,CAACc,kBAAkB,CAAC,OAAO,EAAE;QACvCC,GAAG,EAAE,SAAS;QACdC,KAAK,EAAE,OAAO;QACdC,IAAI,EAAE;MACV,CAAC,CAAC,IAAIR,IAAI,EAAE;IAChB;EACJ,CAAC;EAGD,oBACIf,OAAA;IAAKwB,SAAS,EAAC,wBAAwB;IAAAC,QAAA,EAClCtB,KAAK,CAACuB,GAAG,CAAEC,IAAI,iBACZ3B,OAAA;MAAoBwB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACrCzB,OAAA;QAAKwB,SAAS,EAAC,cAAc;QAAAC,QAAA,EACxBE,IAAI,CAACC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eACNhC,OAAA;QAAKwB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAC1BrB,UAAU,CAACuB,IAAI,CAACM,SAAS;MAAC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAAA,GANAL,IAAI,CAACO,GAAG;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOb,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEd,CAAC;AAAA9B,EAAA,CApDKD,WAAW;AAAAkC,EAAA,GAAXlC,WAAW;AA6DjB,eAAeA,WAAW;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
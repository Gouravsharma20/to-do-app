{"ast":null,"code":"import{createContext,useState,useEffect,useCallback}from\"react\";import axiosInstance from\"../services/axiosInstance\";import{jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";export const AppDataContext=/*#__PURE__*/createContext();const AppContext=_ref=>{let{children}=_ref;// get request states\nconst[groups,setGroups]=useState(null);// post request states\nconst[form,setform]=useState({name:\"\",color:\"#ffffff\"});//about notes\nconst[notes,setNotes]=useState([]);//loading state for notes\nconst[loading,setloading]=useState(false);//error state for notes\nconst[error,setError]=useState(null);const[noteForm,setNoteForm]=useState({groupId:\"\",content:\"\"});// choose selcted group\nconst[selectedGroup,setSelectedGroup]=useState(null);const selectGroup=group=>{setSelectedGroup(group);};//all group names\nconst getGroups=async()=>{const allGroups=await axiosInstance.get(\"/api/group\");const data=allGroups.data;setGroups(data);};useEffect(()=>{getGroups();},[]);//All notes\nconst fetchNotes=useCallback(async groupId=>{if(!groupId){setNotes([]);return;}setloading(true);setError(null);try{// Fetch notes for the selected group\nconst response=await axiosInstance.get(\"/api/note/group/\".concat(groupId));const data=response.data;setNotes(data);}catch(error){console.log(\"Error fetching notes\",error);setError(\"Failed to fetch notes\");setNotes([]);}finally{// Set loading to false after API call completes\nsetloading(false);}},[]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(AppDataContext.Provider,{value:{groups,setGroups,form,setform,notes,setNotes,noteForm,setNoteForm,selectedGroup,setSelectedGroup,getGroups,selectGroup,loading,error,fetchNotes},children:children})});};export default AppContext;","map":{"version":3,"names":["createContext","useState","useEffect","useCallback","axiosInstance","jsx","_jsx","Fragment","_Fragment","AppDataContext","AppContext","_ref","children","groups","setGroups","form","setform","name","color","notes","setNotes","loading","setloading","error","setError","noteForm","setNoteForm","groupId","content","selectedGroup","setSelectedGroup","selectGroup","group","getGroups","allGroups","get","data","fetchNotes","response","concat","console","log","Provider","value"],"sources":["/Users/gaurav/code/Cuvette/to-do-app copy/client/src/Context/AppContext.js"],"sourcesContent":["import {createContext, useState,useEffect,useCallback } from \"react\"\nimport axiosInstance from \"../services/axiosInstance\";\nexport const AppDataContext = createContext()\n\n\n\nconst AppContext = ({ children }) => {\n    // get request states\n    const [groups, setGroups] = useState(null);\n    // post request states\n    const [form, setform] = useState({\n        name: \"\",\n        color: \"#ffffff\"\n    });\n    //about notes\n    const [notes, setNotes] = useState([]);\n    //loading state for notes\n    const [loading,setloading] = useState(false);\n    //error state for notes\n    const [error,setError] = useState(null)\n    const [noteForm, setNoteForm] = useState({\n    groupId: \"\",\n    content: \"\"\n  });\n\n\n\n\n\n\n\n\n    // choose selcted group\n    const [selectedGroup, setSelectedGroup] = useState(null);\n    const selectGroup = (group) => {\n        setSelectedGroup(group);\n    };\n    //all group names\n    const getGroups = async () => {\n            const allGroups = await axiosInstance.get(\"/api/group\")\n            const data = allGroups.data\n            setGroups(data)\n        }\n        useEffect(() => {\n        getGroups();\n    }, []);\n\n\n\n\n\n\n    //All notes\n    const fetchNotes = useCallback(async (groupId) => {\n        if (!groupId) {\n            setNotes([])\n            return;\n        }\n        setloading(true);\n        setError(null);\n\n        try {\n            // Fetch notes for the selected group\n            const response = await axiosInstance.get(`/api/note/group/${groupId}`)\n            const data = response.data\n            setNotes(data)\n        } catch (error) {\n            console.log(\"Error fetching notes\", error);\n            setError(\"Failed to fetch notes\")\n            setNotes([]);\n        } finally {\n            // Set loading to false after API call completes\n            setloading(false)\n        }\n\n    },[])\n   \n\n\n\n\n    \n    \n    return (\n        <>\n            <AppDataContext.Provider value={{\n                groups,\n                setGroups,\n                form,\n                setform,\n                notes,\n                setNotes,\n                noteForm,\n                setNoteForm,\n                selectedGroup,\n                setSelectedGroup,\n                getGroups,\n                selectGroup,\n                loading,\n                error,\n                fetchNotes,\n            }}>\n                {\n                    children\n                }\n            </AppDataContext.Provider>\n\n        </>\n    )\n}\n\nexport default AppContext"],"mappings":"AAAA,OAAQA,aAAa,CAAEC,QAAQ,CAACC,SAAS,CAACC,WAAW,KAAQ,OAAO,CACpE,MAAO,CAAAC,aAAa,KAAM,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,yBACtD,MAAO,MAAM,CAAAC,cAAc,cAAGT,aAAa,CAAC,CAAC,CAI7C,KAAM,CAAAU,UAAU,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC5B;AACA,KAAM,CAACE,MAAM,CAAEC,SAAS,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CAC1C;AACA,KAAM,CAACc,IAAI,CAAEC,OAAO,CAAC,CAAGf,QAAQ,CAAC,CAC7BgB,IAAI,CAAE,EAAE,CACRC,KAAK,CAAE,SACX,CAAC,CAAC,CACF;AACA,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CACtC;AACA,KAAM,CAACoB,OAAO,CAACC,UAAU,CAAC,CAAGrB,QAAQ,CAAC,KAAK,CAAC,CAC5C;AACA,KAAM,CAACsB,KAAK,CAACC,QAAQ,CAAC,CAAGvB,QAAQ,CAAC,IAAI,CAAC,CACvC,KAAM,CAACwB,QAAQ,CAAEC,WAAW,CAAC,CAAGzB,QAAQ,CAAC,CACzC0B,OAAO,CAAE,EAAE,CACXC,OAAO,CAAE,EACX,CAAC,CAAC,CASA;AACA,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAG7B,QAAQ,CAAC,IAAI,CAAC,CACxD,KAAM,CAAA8B,WAAW,CAAIC,KAAK,EAAK,CAC3BF,gBAAgB,CAACE,KAAK,CAAC,CAC3B,CAAC,CACD;AACA,KAAM,CAAAC,SAAS,CAAG,KAAAA,CAAA,GAAY,CACtB,KAAM,CAAAC,SAAS,CAAG,KAAM,CAAA9B,aAAa,CAAC+B,GAAG,CAAC,YAAY,CAAC,CACvD,KAAM,CAAAC,IAAI,CAAGF,SAAS,CAACE,IAAI,CAC3BtB,SAAS,CAACsB,IAAI,CAAC,CACnB,CAAC,CACDlC,SAAS,CAAC,IAAM,CAChB+B,SAAS,CAAC,CAAC,CACf,CAAC,CAAE,EAAE,CAAC,CAON;AACA,KAAM,CAAAI,UAAU,CAAGlC,WAAW,CAAC,KAAO,CAAAwB,OAAO,EAAK,CAC9C,GAAI,CAACA,OAAO,CAAE,CACVP,QAAQ,CAAC,EAAE,CAAC,CACZ,OACJ,CACAE,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,IAAI,CAAC,CAEd,GAAI,CACA;AACA,KAAM,CAAAc,QAAQ,CAAG,KAAM,CAAAlC,aAAa,CAAC+B,GAAG,oBAAAI,MAAA,CAAoBZ,OAAO,CAAE,CAAC,CACtE,KAAM,CAAAS,IAAI,CAAGE,QAAQ,CAACF,IAAI,CAC1BhB,QAAQ,CAACgB,IAAI,CAAC,CAClB,CAAE,MAAOb,KAAK,CAAE,CACZiB,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAElB,KAAK,CAAC,CAC1CC,QAAQ,CAAC,uBAAuB,CAAC,CACjCJ,QAAQ,CAAC,EAAE,CAAC,CAChB,CAAC,OAAS,CACN;AACAE,UAAU,CAAC,KAAK,CAAC,CACrB,CAEJ,CAAC,CAAC,EAAE,CAAC,CAQL,mBACIhB,IAAA,CAAAE,SAAA,EAAAI,QAAA,cACIN,IAAA,CAACG,cAAc,CAACiC,QAAQ,EAACC,KAAK,CAAE,CAC5B9B,MAAM,CACNC,SAAS,CACTC,IAAI,CACJC,OAAO,CACPG,KAAK,CACLC,QAAQ,CACRK,QAAQ,CACRC,WAAW,CACXG,aAAa,CACbC,gBAAgB,CAChBG,SAAS,CACTF,WAAW,CACXV,OAAO,CACPE,KAAK,CACLc,UACJ,CAAE,CAAAzB,QAAA,CAEMA,QAAQ,CAES,CAAC,CAE5B,CAAC,CAEX,CAAC,CAED,cAAe,CAAAF,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
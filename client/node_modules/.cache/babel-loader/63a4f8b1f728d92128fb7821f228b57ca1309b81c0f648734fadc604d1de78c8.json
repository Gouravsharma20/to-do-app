{"ast":null,"code":"var _jsxFileName = \"/Users/gaurav/code/Cuvette/to-do-app copy/client/src/Components/Records/NoteRecords/NoteRecords.js\",\n  _s = $RefreshSig$();\n// import axios from 'axios';\nimport { useContext, useEffect } from \"react\";\nimport { AppDataContext } from '../../../Context/AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteRecords = () => {\n  _s();\n  const {\n    notes,\n    selectedGroup,\n    loading,\n    error,\n    fetchNotes\n  } = useContext(AppDataContext);\n  // const { selectedGroup } = useContext(AppDataContext)\n  // const [notes, setNotes] = useState([])\n  // const [loading, setloading] = useState(false)\n  // const [error, setError] = useState(null)\n\n  // const fetchNotes = useCallback(async () => {\n  //     if (!selectedGroup || !selectedGroup._id) {\n  //         setNotes([])\n  //         return;\n  //     }\n  //     setloading(true);\n  //     setError(null);\n\n  //     try {\n\n  //         const response = await axios.get(`http://localhost:4000/api/note/group/${selectedGroup._id}`)\n  //         const data = response.data\n  //         setNotes(data)\n  //     } catch (error) {\n  //         console.log(\"Error fetching notes\", error);\n  //         setError(\"Failed to fetch notes\")\n  //         setNotes([]);\n  //     } finally {\n  //         setloading(false)\n  //     }\n  // }, [selectedGroup]);\n\n  useEffect(() => {\n    fetchNotes(selectedGroup);\n  }, [fetchNotes]);\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const today = new Date();\n    const yesterday = new Date(today);\n    yesterday.setDate(yesterday.getDate() - 1);\n    const isToday = date.toDateString() === today.toDateString();\n    const isYesterday = date.toDateString() === yesterday.toDateString();\n    const time = date.toLocaleTimeString('en-US', {\n      hour: 'numeric',\n      minute: '2-digit',\n      hour12: true\n    });\n    if (isToday) {\n      return `Today ${time}`;\n    } else if (isYesterday) {\n      return `Yesterday ${time}`;\n    } else {\n      return `${date.toLocaleDateString('en-US', {\n        day: 'numeric',\n        month: 'short',\n        year: 'numeric'\n      })} ${time}`;\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-notes\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading notes...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-notes\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchNotes,\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n  if (!notes.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-notes\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No notes yet for this group. Start by adding your first note!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note-records-container\",\n    children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-content\",\n        children: note.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-timestamp\",\n        children: formatDate(note.createdAt)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this)]\n    }, note._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(NoteRecords, \"O2O0Zu3+ZCXodstx0aF0AY6bMOo=\");\n_c = NoteRecords;\nexport default NoteRecords;\nvar _c;\n$RefreshReg$(_c, \"NoteRecords\");","map":{"version":3,"names":["useContext","useEffect","AppDataContext","jsxDEV","_jsxDEV","NoteRecords","_s","notes","selectedGroup","loading","error","fetchNotes","formatDate","dateString","date","Date","today","yesterday","setDate","getDate","isToday","toDateString","isYesterday","time","toLocaleTimeString","hour","minute","hour12","toLocaleDateString","day","month","year","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","note","content","createdAt","_id","_c","$RefreshReg$"],"sources":["/Users/gaurav/code/Cuvette/to-do-app copy/client/src/Components/Records/NoteRecords/NoteRecords.js"],"sourcesContent":["// import axios from 'axios';\nimport {useContext, useEffect} from \"react\"\nimport { AppDataContext } from '../../../Context/AppContext';\n\nconst NoteRecords = () => {\n    const {notes,selectedGroup,loading,error,fetchNotes} = useContext(AppDataContext)\n    // const { selectedGroup } = useContext(AppDataContext)\n    // const [notes, setNotes] = useState([])\n    // const [loading, setloading] = useState(false)\n    // const [error, setError] = useState(null)\n\n    // const fetchNotes = useCallback(async () => {\n    //     if (!selectedGroup || !selectedGroup._id) {\n    //         setNotes([])\n    //         return;\n    //     }\n    //     setloading(true);\n    //     setError(null);\n\n    //     try {\n\n    //         const response = await axios.get(`http://localhost:4000/api/note/group/${selectedGroup._id}`)\n    //         const data = response.data\n    //         setNotes(data)\n    //     } catch (error) {\n    //         console.log(\"Error fetching notes\", error);\n    //         setError(\"Failed to fetch notes\")\n    //         setNotes([]);\n    //     } finally {\n    //         setloading(false)\n    //     }\n    // }, [selectedGroup]);\n\n    useEffect(() => {\n        fetchNotes(selectedGroup);\n    }, [fetchNotes]);\n\n    const formatDate = (dateString) => {\n        const date = new Date(dateString);\n        const today = new Date();\n        const yesterday = new Date(today);\n        yesterday.setDate(yesterday.getDate() - 1);\n\n        const isToday = date.toDateString() === today.toDateString();\n        const isYesterday = date.toDateString() === yesterday.toDateString();\n\n        const time = date.toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: '2-digit',\n            hour12: true\n        });\n\n        if (isToday) {\n            return `Today ${time}`;\n        } else if (isYesterday) {\n            return `Yesterday ${time}`;\n        } else {\n            return `${date.toLocaleDateString('en-US', {\n                day: 'numeric',\n                month: 'short',\n                year: 'numeric'\n            })} ${time}`;\n        }\n    };\n\n    if (loading) {\n        return (\n            <div className=\"no-notes\">\n                <p>Loading notes...</p>\n            </div>\n        );\n    }\n\n    if (error) {\n        return (\n            <div className=\"no-notes\">\n                <p>Error: {error}</p>\n                <button onClick={fetchNotes}>Try Again</button>\n            </div>\n        );\n    }\n\n    if (!notes.length) {\n        return (\n            <div className=\"no-notes\">\n                <p>No notes yet for this group. Start by adding your first note!</p>\n            </div>\n        );\n    }\n    return (\n        <div className=\"note-records-container\">\n            {notes.map((note) => (\n                <div key={note._id} className=\"note-item\">\n                    <div className=\"note-content\">\n                        {note.content}\n                    </div>\n                    <div className=\"note-timestamp\">\n                        {formatDate(note.createdAt)}\n                    </div>\n                </div>\n            ))}\n            \n        </div>\n    );\n}\n\n\n\n\n\n\n\n\nexport default NoteRecords;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
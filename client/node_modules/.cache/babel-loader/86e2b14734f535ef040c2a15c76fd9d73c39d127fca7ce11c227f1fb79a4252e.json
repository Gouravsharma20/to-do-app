{"ast":null,"code":"var _jsxFileName = \"/Users/gaurav/code/Cuvette/to-do-app/client/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport axios from \"axios\";\n// import { get } from 'mongoose';\n//Get Data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [groups, setGroups] = useState(null);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const getGroups = async () => {\n    const allGroups = await axios.get(\"http://localhost:4000/api/group\");\n    const data = allGroups.data;\n    setGroups(data);\n  };\n  useEffect(() => {\n    getGroups();\n  }, []);\n\n  //post form data\n  const colors = ['#FF5733', '#33FF57', '#3357FF', '#FF33F5', '#33F5FF', '#F5FF33', '#FF8C00', '#8A2BE2'];\n  const [form, setform] = useState({\n    name: \"\",\n    color: \"#ffffffff\"\n  });\n  const [noteForm, setNoteForm] = useState({\n    groupId: \"\",\n    content: \"\"\n  });\n  const updateForm = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setform({\n      ...form,\n      [name]: value\n    });\n  };\n  const createGroup = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:4000/api/group\", form);\n      console.log(response);\n      setform({\n        name: \"\",\n        color: \"#FF5733\"\n      });\n      getGroups();\n    } catch (error) {\n      var _error$response;\n      console.log(\"Error details:\", (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      console.log(\"Form data being sent:\", form);\n    }\n  };\n  const createNote = async e => {\n    e.preventDefault();\n    try {\n      const noteData = {\n        groupId: selectedGroup._id,\n        content: selectedGroup.content\n      };\n      await axios.post(\"http://localhost:4000/api/note\", noteData);\n      setNoteForm({\n        content: \"\"\n      });\n      selectedGroup(null);\n    } catch (error) {\n      var _error$response2;\n      console.log(\"Error creating note:\", (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: createGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create a group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"\",\n        children: \"Group name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: form.name,\n        onChange: updateForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"\",\n        children: \"Group color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: colors.map(color => /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"color\",\n            value: color,\n            checked: form.color === color,\n            onChange: updateForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              backgroundColor: color,\n              width: '20px',\n              height: '20px',\n              display: 'inline-block'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, color, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onChange: updateForm,\n        children: \"Create Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), !selectedGroup && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select a Group:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), groups.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setSelectedGroup(group),\n        style: {\n          cursor: 'pointer',\n          border: '1px solid #ccc',\n          padding: '10px',\n          margin: '5px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: group.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: group.color,\n            width: '20px',\n            height: '20px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this)]\n      }, group._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jD5JWyefh/+A4MfleVEXS0orzcU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","groups","setGroups","selectedGroup","setSelectedGroup","getGroups","allGroups","get","data","colors","form","setform","name","color","noteForm","setNoteForm","groupId","content","updateForm","e","value","target","createGroup","preventDefault","response","post","console","log","error","_error$response","createNote","noteData","_id","_error$response2","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","onChange","map","checked","style","backgroundColor","width","height","display","group","onClick","cursor","border","padding","margin","_c","$RefreshReg$"],"sources":["/Users/gaurav/code/Cuvette/to-do-app/client/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\n\nimport axios from \"axios\";\n// import { get } from 'mongoose';\n//Get Data\nfunction App() {\n  const [groups, setGroups] = useState(null);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n\n\n\n\n  const getGroups = async () => {\n    const allGroups = await axios.get(\"http://localhost:4000/api/group\")\n    const data = allGroups.data\n    setGroups(data)\n  }\n\n  useEffect(() => {\n    getGroups();\n  }, []);\n\n\n\n\n\n\n\n\n\n\n\n\n\n  //post form data\n  const colors = ['#FF5733', '#33FF57', '#3357FF', '#FF33F5', '#33F5FF', '#F5FF33', '#FF8C00', '#8A2BE2'];\n  const [form, setform] = useState({\n    name: \"\",\n    color: \"#ffffffff\"\n  });\n\n  const [noteForm, setNoteForm] = useState({\n    groupId: \"\",\n    content: \"\"\n  });\n\n  const updateForm = (e) => {\n    const { name, value } = e.target;\n\n    setform({\n      ...form,\n      [name]: value\n    });\n  }\n\n\n\n  const createGroup = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:4000/api/group\", form)\n      console.log(response)\n      setform({\n        name: \"\",\n        color: \"#FF5733\"\n      })\n      getGroups();\n    } catch (error) {\n      console.log(\"Error details:\", error.response?.data);\n      console.log(\"Form data being sent:\", form);\n    }\n  }\n\n  const createNote = async (e) => {\n    e.preventDefault();\n    try {\n      const noteData = {\n        groupId: selectedGroup._id,\n        content: selectedGroup.content\n      }\n      await axios.post(\"http://localhost:4000/api/note\", noteData);\n      setNoteForm({ content: \"\" })\n      selectedGroup(null)\n    } catch (error) {\n      console.log(\"Error creating note:\", error.response?.data);\n    }\n\n  }\n\n\n\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={createGroup}>\n        <h1>Create a group</h1>\n        <label htmlFor=''>Group name</label>\n        <input type='text'\n          name='name'\n          value={form.name}\n          onChange={updateForm}></input>\n        <br />\n        <label htmlFor=''>Group color</label>\n        <div>\n          {colors.map(color => (\n            <label key={color}>\n              <input\n                type='radio'\n                name='color'\n                value={color}\n                checked={form.color === color}\n                onChange={updateForm}\n              />\n              <span style={{ backgroundColor: color, width: '20px', height: '20px', display: 'inline-block' }}></span>\n            </label>\n          ))}\n        </div>\n        <br />\n        <button type='submit'\n          onChange={updateForm}>Create Group</button>\n      </form>\n      {!selectedGroup && (\n        <div>\n          <h2>Select a Group:</h2>\n          {groups.map((group) => (\n            <div key={group._id} onClick={() => setSelectedGroup(group)} style={{ cursor: 'pointer', border: '1px solid #ccc', padding: '10px', margin: '5px' }}>\n              <h3>{group.name}</h3>\n              <div style={{ backgroundColor: group.color, width: '20px', height: '20px' }}></div>\n            </div>\n          ))}\n        </div>\n      )}\n      \n      {/* {groups && groups.map((group) => {\n        return (\n          <div className='app' key={group._id}>\n            <h1>{group.name}</h1>\n            <h2>{group.color}</h2>\n            <h2>{group.updatedAt}</h2>\n          </div>\n\n        )\n      })} */}\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
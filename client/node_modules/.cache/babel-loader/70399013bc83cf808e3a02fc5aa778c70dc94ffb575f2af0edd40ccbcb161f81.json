{"ast":null,"code":"var _jsxFileName = \"/Users/gaurav/code/Cuvette/to-do-app copy/client/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Home from './Pages/Home';\nimport axios from \"axios\";\n// import { get } from 'mongoose';\n//Get Data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [groups, setGroups] = useState(null);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const getGroups = async () => {\n    const allGroups = await axios.get(\"http://localhost:4000/api/group\");\n    const data = allGroups.data;\n    setGroups(data);\n  };\n  useEffect(() => {\n    getGroups();\n  }, []);\n\n  //post form data\n  const colors = ['#FF5733', '#33FF57', '#3357FF', '#FF33F5', '#33F5FF', '#F5FF33', '#FF8C00', '#8A2BE2'];\n  const [form, setform] = useState({\n    name: \"\",\n    color: \"#ffffffff\"\n  });\n  const [noteForm, setNoteForm] = useState({\n    groupId: \"\",\n    content: \"\"\n  });\n  const updateForm = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setform({\n      ...form,\n      [name]: value\n    });\n  };\n  const updateNoteForm = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNoteForm({\n      ...noteForm,\n      [name]: value\n    });\n  };\n  const createGroup = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:4000/api/group\", form);\n      console.log(response);\n      setform({\n        name: \"\",\n        color: \"#FF5733\"\n      });\n      getGroups();\n    } catch (error) {\n      var _error$response;\n      console.log(\"Error details:\", (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      console.log(\"Form data being sent:\", form);\n    }\n  };\n  const createNote = async e => {\n    e.preventDefault();\n    try {\n      const noteData = {\n        groupId: selectedGroup._id,\n        content: selectedGroup.content\n      };\n      await axios.post(\"http://localhost:4000/api/note\", noteData);\n      setNoteForm({\n        content: \"\"\n      });\n      selectedGroup(null);\n    } catch (error) {\n      var _error$response2;\n      console.log(\"Error creating note:\", (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // <div className=\"App\">\n    // {/* <form onSubmit={createGroup}>\n    //     <h1>Create a group</h1>\n    //     <label htmlFor=''>Group name</label>\n    //     <input type='text'\n    //       name='name'\n    //       value={form.name}\n    //       onChange={updateForm}></input>\n    //     <br />\n    //     <label htmlFor=''>Group color</label>\n    //     <div>\n    //       {colors.map(color => (\n    //         <label key={color}>\n    //           <input\n    //             type='radio'\n    //             name='color'\n    //             value={color}\n    //             checked={form.color === color}\n    //             onChange={updateForm}\n    //           />\n    //           <span style={{ backgroundColor: color, width: '20px', height: '20px', display: 'inline-block' }}></span>\n    //         </label>\n    //       ))}\n    //     </div>\n    //     <br />\n    //     <button type='submit'\n    //       onChange={updateForm}>Create Group</button>\n    //   </form> */}\n    // {/* {!selectedGroup && (\n    //   <div>\n    //     <h2>Select a Group:</h2>\n    //     {groups.map((group) => (\n    //       <div key={group._id} onClick={() => setSelectedGroup(group)} style={{ cursor: 'pointer', border: '1px solid #ccc', padding: '10px', margin: '5px' }}>\n    //         <h3>{group.name}</h3>\n    //         <div style={{ backgroundColor: group.color, width: '20px', height: '20px' }}></div>\n    //       </div>\n    //     ))}\n    //   </div>\n    // )}\n    // {selectedGroup && (\n    //   <div>\n    //     <h2>Add to {selectedGroup.name}</h2>\n    //     <form onSubmit={createNote}>\n    //       <textarea\n    //         name='content'\n    //         value={noteForm.content}\n    //         onChange={updateNoteForm}\n    //         placeholder=\"chai pee thi 500 ki...\"\n    //         required\n    //       />\n    //       <button type='submit'>Add Note</button>\n    //     </form>\n    //     <button onClick={() => setSelectedGroup(null)}>Back to Groups</button>\n    //   </div>\n    // )} */}\n    // {/* {groups && groups.map((group) => {\n    //       return (\n    //         <div className='app' key={group._id}>\n    //           <h1>{group.name}</h1>\n    //           <h2>{group.color}</h2>\n    //           <h2>{group.updatedAt}</h2>\n    //         </div>\n    //       )\n    //     })} */}\n    _jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 5\n    }, this)\n\n    // </div >\n  );\n}\n_s(App, \"jD5JWyefh/+A4MfleVEXS0orzcU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","BrowserRouter","Router","Routes","Route","Home","axios","jsxDEV","_jsxDEV","App","_s","groups","setGroups","selectedGroup","setSelectedGroup","getGroups","allGroups","get","data","colors","form","setform","name","color","noteForm","setNoteForm","groupId","content","updateForm","e","value","target","updateNoteForm","createGroup","preventDefault","response","post","console","log","error","_error$response","createNote","noteData","_id","_error$response2","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gaurav/code/Cuvette/to-do-app copy/client/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\n\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\"\nimport Home from './Pages/Home';\n\nimport axios from \"axios\";\n// import { get } from 'mongoose';\n//Get Data\nfunction App() {\n  const [groups, setGroups] = useState(null);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n\n\n\n\n  const getGroups = async () => {\n    const allGroups = await axios.get(\"http://localhost:4000/api/group\")\n    const data = allGroups.data\n    setGroups(data)\n  }\n\n  useEffect(() => {\n    getGroups();\n  }, []);\n\n\n\n\n\n\n\n\n\n\n\n\n\n  //post form data\n  const colors = ['#FF5733', '#33FF57', '#3357FF', '#FF33F5', '#33F5FF', '#F5FF33', '#FF8C00', '#8A2BE2'];\n  const [form, setform] = useState({\n    name: \"\",\n    color: \"#ffffffff\"\n  });\n\n  const [noteForm, setNoteForm] = useState({\n    groupId: \"\",\n    content: \"\"\n  });\n\n  const updateForm = (e) => {\n    const { name, value } = e.target;\n\n    setform({\n      ...form,\n      [name]: value\n    });\n  }\n\n  const updateNoteForm = (e) => {\n    const { name, value } = e.target;\n    setNoteForm({ ...noteForm, [name]: value });\n  }\n\n\n\n\n  const createGroup = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:4000/api/group\", form)\n      console.log(response)\n      setform({\n        name: \"\",\n        color: \"#FF5733\"\n      })\n      getGroups();\n    } catch (error) {\n      console.log(\"Error details:\", error.response?.data);\n      console.log(\"Form data being sent:\", form);\n    }\n  }\n\n  const createNote = async (e) => {\n    e.preventDefault();\n    try {\n      const noteData = {\n        groupId: selectedGroup._id,\n        content: selectedGroup.content\n      }\n      await axios.post(\"http://localhost:4000/api/note\", noteData);\n      setNoteForm({ content: \"\" })\n      selectedGroup(null)\n    } catch (error) {\n      console.log(\"Error creating note:\", error.response?.data);\n    }\n\n  }\n\n\n\n\n  return (\n    // <div className=\"App\">\n    // {/* <form onSubmit={createGroup}>\n    //     <h1>Create a group</h1>\n    //     <label htmlFor=''>Group name</label>\n    //     <input type='text'\n    //       name='name'\n    //       value={form.name}\n    //       onChange={updateForm}></input>\n    //     <br />\n    //     <label htmlFor=''>Group color</label>\n    //     <div>\n    //       {colors.map(color => (\n    //         <label key={color}>\n    //           <input\n    //             type='radio'\n    //             name='color'\n    //             value={color}\n    //             checked={form.color === color}\n    //             onChange={updateForm}\n    //           />\n    //           <span style={{ backgroundColor: color, width: '20px', height: '20px', display: 'inline-block' }}></span>\n    //         </label>\n    //       ))}\n    //     </div>\n    //     <br />\n    //     <button type='submit'\n    //       onChange={updateForm}>Create Group</button>\n    //   </form> */}\n    // {/* {!selectedGroup && (\n    //   <div>\n    //     <h2>Select a Group:</h2>\n    //     {groups.map((group) => (\n    //       <div key={group._id} onClick={() => setSelectedGroup(group)} style={{ cursor: 'pointer', border: '1px solid #ccc', padding: '10px', margin: '5px' }}>\n    //         <h3>{group.name}</h3>\n    //         <div style={{ backgroundColor: group.color, width: '20px', height: '20px' }}></div>\n    //       </div>\n    //     ))}\n    //   </div>\n    // )}\n    // {selectedGroup && (\n    //   <div>\n    //     <h2>Add to {selectedGroup.name}</h2>\n    //     <form onSubmit={createNote}>\n    //       <textarea\n    //         name='content'\n    //         value={noteForm.content}\n    //         onChange={updateNoteForm}\n    //         placeholder=\"chai pee thi 500 ki...\"\n    //         required\n    //       />\n    //       <button type='submit'>Add Note</button>\n    //     </form>\n    //     <button onClick={() => setSelectedGroup(null)}>Back to Groups</button>\n    //   </div>\n    // )} */}\n\n    // {/* {groups && groups.map((group) => {\n    //       return (\n    //         <div className='app' key={group._id}>\n    //           <h1>{group.name}</h1>\n    //           <h2>{group.color}</h2>\n    //           <h2>{group.updatedAt}</h2>\n    //         </div>\n\n    //       )\n    //     })} */}\n\n\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n      </Routes>\n    </Router>\n\n    // </div >\n  );\n\n\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/gaurav/code/Cuvette/to-do-app/client/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport axios from \"axios\";\n//import Group from '../../server/models/GroupModel';\n\n//Get Data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [groups, setGroups] = useState(null);\n  //const [note, getnote] = useState(null);\n  // get all groups\n  const getGroups = async () => {\n    const allGroups = await axios.get(\"http://localhost:4000/api/group\");\n    const data = allGroups.data;\n    setGroups(data);\n  };\n  useEffect(() => {\n    getGroups();\n  }, []);\n\n  //post data\n\n  const [form, setform] = useState({\n    name: \"\",\n    color: \"\"\n  });\n  const updateForm = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setform({\n      ...form,\n      [name]: value\n    });\n  };\n  const createGroup = async e => {\n    e.preventDefault();\n    try {} catch (err) {}\n    const response = await axios.post(\"http://localhost:4000/api/group\", form);\n    console.log(response);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: createGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create a group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"\",\n        children: \"Group name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        onChange: updateForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"\",\n        children: \"Group color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        name: \"color\",\n        onChange: updateForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onChange: updateForm,\n        children: \"Create Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NupRErI5JE/nvaOtxYjBESxrCk8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","groups","setGroups","getGroups","allGroups","get","data","form","setform","name","color","updateForm","e","value","target","createGroup","preventDefault","err","response","post","console","log","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","onChange","_c","$RefreshReg$"],"sources":["/Users/gaurav/code/Cuvette/to-do-app/client/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\n\nimport axios from \"axios\";\n//import Group from '../../server/models/GroupModel';\n\n\n//Get Data\nfunction App() {\n  const [groups, setGroups] = useState(null);\n  //const [note, getnote] = useState(null);\n  // get all groups\n  const getGroups = async () => {\n    const allGroups = await axios.get(\"http://localhost:4000/api/group\")\n    const data = allGroups.data\n    setGroups(data)\n  }\n\n  useEffect(() => {\n    getGroups();\n  }, []);\n\n  //post data\n\n  const [form, setform] = useState({\n    name: \"\",\n    color: \"\"\n  });\n\n  const updateForm = (e) => {\n    const { name, value } = e.target;\n\n    setform({\n      ...form,\n      [name]: value\n    });\n  }\n\n  const createGroup = async (e) => {\n    e.preventDefault();\n    try{} catch(err){}\n    const response = await axios.post(\"http://localhost:4000/api/group\", form)\n    console.log(response);\n  }\n\n\n\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={createGroup}>\n        <h1>Create a group</h1>\n        <label htmlFor=''>Group name</label>\n        <input type='text' name='name' onChange={updateForm}></input>\n        <br />\n        <label htmlFor=''>Group color</label>\n        <input type='color' name='color' onChange={updateForm}></input>\n        <br />\n        <button type='submit' onChange={updateForm}>Create Group</button>\n      </form>\n      {/* {groups && groups.map((group) => {\n        return (\n          <div className='app' key = {group._id}>\n            \n            <h1>{group.name}</h1>\n            <h2>{group.color}</h2>\n            <h2>{group.updatedAt}</h2>\n          </div>\n\n        )\n      })} */}\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAElB,OAAOC,KAAK,MAAM,OAAO;AACzB;;AAGA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC1C;EACA;EACA,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,SAAS,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,iCAAiC,CAAC;IACpE,MAAMC,IAAI,GAAGF,SAAS,CAACE,IAAI;IAC3BJ,SAAS,CAACI,IAAI,CAAC;EACjB,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACdS,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC;IAC/Bc,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAMC,UAAU,GAAIC,CAAC,IAAK;IACxB,MAAM;MAAEH,IAAI;MAAEI;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAEhCN,OAAO,CAAC;MACN,GAAGD,IAAI;MACP,CAACE,IAAI,GAAGI;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,WAAW,GAAG,MAAOH,CAAC,IAAK;IAC/BA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,IAAG,CAAC,CAAC,CAAC,OAAMC,GAAG,EAAC,CAAC;IACjB,MAAMC,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,IAAI,CAAC,iCAAiC,EAAEZ,IAAI,CAAC;IAC1Ea,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;EACvB,CAAC;EAKD,oBACEpB,OAAA;IAAKwB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBzB,OAAA;MAAM0B,QAAQ,EAAET,WAAY;MAAAQ,QAAA,gBAC1BzB,OAAA;QAAAyB,QAAA,EAAI;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvB9B,OAAA;QAAO+B,OAAO,EAAC,EAAE;QAAAN,QAAA,EAAC;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpC9B,OAAA;QAAOgC,IAAI,EAAC,MAAM;QAACrB,IAAI,EAAC,MAAM;QAACsB,QAAQ,EAAEpB;MAAW;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC7D9B,OAAA;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACN9B,OAAA;QAAO+B,OAAO,EAAC,EAAE;QAAAN,QAAA,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrC9B,OAAA;QAAOgC,IAAI,EAAC,OAAO;QAACrB,IAAI,EAAC,OAAO;QAACsB,QAAQ,EAAEpB;MAAW;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/D9B,OAAA;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACN9B,OAAA;QAAQgC,IAAI,EAAC,QAAQ;QAACC,QAAQ,EAAEpB,UAAW;QAAAY,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAaJ,CAAC;AAEV;AAAC5B,EAAA,CAlEQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAoEZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}